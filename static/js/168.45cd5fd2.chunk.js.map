{"version":3,"file":"static/js/168.45cd5fd2.chunk.js","mappings":"yLACA,EAAyB,wB,SCiCzB,EA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAC9BJ,EAAWI,EAAMC,QAClB,GACF,GAAE,CAACT,IAEmB,IAAnBG,EAAQO,QACH,sEAGP,+BACE,eAAIC,UAAWC,EAAf,SACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,WACX,oBAHOF,EAAOG,GADC,OAU1B,C,sLChCKC,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,+GAERC,MAAM,GAAD,OACvBF,EADuB,uCACgBD,IAHb,cAEzBI,EAFyB,gBAKZA,EAASC,OALG,cAKzBC,EALyB,yBAMxBA,EAAKf,SANmB,wCAS/BgB,MAAM,0RATyB,+DAAH,qDAcnBC,EAAiB,mCAAG,WAAMC,GAAN,kGAENN,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2BS,IAH1B,cAEvBL,EAFuB,gBAKVA,EAASC,OALC,cAKvBC,EALuB,yBAMtBA,EAAKf,SANiB,wCAS7BgB,MAAM,0RATuB,+DAAH,sDAcjBG,EAAU,mCAAG,WAAMC,GAAN,kGAECR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,oBACeX,IAHrB,cAEhBI,EAFgB,gBAKHA,EAASC,OALN,cAKhBC,EALgB,yBAMfA,GANe,wCAStBC,MAAM,0RATgB,+DAAH,sDAcVK,EAAiB,mCAAG,WAAMD,GAAN,kGAENR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,4BACuBX,IAHtB,cAEvBI,EAFuB,gBAKVA,EAASC,OALC,cAKvBC,EALuB,yBAMtBA,GANsB,wCAS7BC,MAAM,0RATuB,+DAAH,sDAcjBnB,EAAiB,mCAAG,WAAMuB,GAAN,kGAENR,MAAM,GAAD,OACvBF,EADuB,kBACLU,EADK,4BACuBX,IAHtB,cAEvBI,EAFuB,gBAKVA,EAASC,OALC,cAKvBC,EALuB,yBAMtBA,GANsB,wCAS7BC,MAAM,0RATuB,+DAAH,qD,sBC3D9B,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOjC,KAAK4B,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"review\":\"Reviews_review__sHbuN\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviews } from '../services/api.js';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(movie => {\n      setReviews(movie.results);\n    });\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n  return (\n    <>\n      <ul className={css.review}>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <b>{review.author}</b>\n            <p>{review.content}</p>\n            <hr />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '1ecd20ff6e4c95041ce45cabe64037fc';\nconst BASE_API = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_API}/trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    // console.error(`ERROR: ${error}`);\n    alert('Щось пішло не так... Будь ласка, спробуйте ще раз пізніше.');\n    throw error;\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${BASE_API}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    // console.error(`ERROR: ${error}`);\n    alert('Щось пішло не так... Будь ласка, спробуйте ще раз пізніше.');\n    throw error;\n  }\n};\n\nexport const fetchMovie = async movie_id => {\n  try {\n    const response = await fetch(\n      `${BASE_API}/movie/${movie_id}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    // console.error(`ERROR: ${error}`);\n    alert('Щось пішло не так... Будь ласка, спробуйте ще раз пізніше.');\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movie_id => {\n  try {\n    const response = await fetch(\n      `${BASE_API}/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    // console.error(`ERROR: ${error}`);\n    alert('Щось пішло не так... Будь ласка, спробуйте ще раз пізніше.');\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  try {\n    const response = await fetch(\n      `${BASE_API}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    // console.error(error);\n    alert('Щось пішло не так... Будь ласка, спробуйте ще раз пізніше.');\n    throw error;\n  }\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","movie","results","length","className","css","map","review","author","content","id","API_KEY","BASE_API","fetchTrendingMovies","fetch","response","json","data","alert","fetchSearchMovies","query","fetchMovie","movie_id","fetchMovieCredits","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}